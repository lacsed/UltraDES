// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace UltraDESWeb.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\Lucas\source\repos\UltraDESWeb\UltraDESWeb\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Lucas\source\repos\UltraDESWeb\UltraDESWeb\_Imports.razor"
using System.Net.Http.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\Lucas\source\repos\UltraDESWeb\UltraDESWeb\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\Lucas\source\repos\UltraDESWeb\UltraDESWeb\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\Lucas\source\repos\UltraDESWeb\UltraDESWeb\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\Lucas\source\repos\UltraDESWeb\UltraDESWeb\_Imports.razor"
using Microsoft.AspNetCore.Components.Web.Virtualization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\Lucas\source\repos\UltraDESWeb\UltraDESWeb\_Imports.razor"
using Microsoft.AspNetCore.Components.WebAssembly.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\Lucas\source\repos\UltraDESWeb\UltraDESWeb\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\Lucas\source\repos\UltraDESWeb\UltraDESWeb\_Imports.razor"
using UltraDESWeb;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\Lucas\source\repos\UltraDESWeb\UltraDESWeb\_Imports.razor"
using UltraDESWeb.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Lucas\source\repos\UltraDESWeb\UltraDESWeb\Pages\Index.razor"
using global::UltraDES;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/")]
    public partial class Index : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 249 "C:\Users\Lucas\source\repos\UltraDESWeb\UltraDESWeb\Pages\Index.razor"
 
    enum Page
    {
        Empty,
        CreateState,
        CreateEvent,
        CreateAutomaton,
        ShowAutomaton,
        AutomatonSummary,
        CreateSupervisor,
        BinaryOperations,
        UnaryOperations
    }

    private readonly Dictionary<string, AbstractState> states = new Dictionary<string, AbstractState>();
    private readonly Dictionary<string, AbstractEvent> events = new Dictionary<string, AbstractEvent>();
    private readonly Dictionary<string, DeterministicFiniteAutomaton> automata = new Dictionary<string, DeterministicFiniteAutomaton>();
    private Page page = Page.Empty;
    private DeterministicFiniteAutomaton automaton = null;
    private bool ShowStates = false;
    private bool ShowEvents = false;
    private bool ShowAutomata = false;
    private void Clear()
    {
        page = Page.Empty;
        StateHasChanged();
    }

    private void AddState(AbstractState q)
    {
        page = Page.Empty;

        Console.WriteLine(q);
        if (!states.ContainsKey(q.ToString()))
            states.Add(q.ToString(), q);

        StateHasChanged();
    }

    private async void RemoveState(string state)
    {
        if (!await JsRuntime.Confirm($"Delete State {state}?")) return;
        states.Remove(state);

        StateHasChanged();
    }

    private void AddEvent(AbstractEvent e)
    {
        page = Page.Empty;

        Console.WriteLine(e);
        if (!events.ContainsKey(e.ToString())) events.Add(e.ToString(), e);

        StateHasChanged();
    }

    private async void RemoveEvent(string ev)
    {
        if (!await JsRuntime.Confirm($"Delete Event {ev}?")) return;
        events.Remove(ev);
        StateHasChanged();
    }

    private void AddAutomaton(IEnumerable<DeterministicFiniteAutomaton> aut)
    {
        page = Page.Empty;
        foreach (var G in aut)
            if (!automata.ContainsKey(G.Name)) automata.Add(G.Name, G);
        StateHasChanged();
    }

    private async void RemoveAutomaton(string aut)
    {
        if (!await JsRuntime.Confirm($"Delete Automaton {aut}?")) return;
        automata.Remove(aut);
        StateHasChanged();
    }

    private void ShowAutomaton(DeterministicFiniteAutomaton G)
    {
        page = Page.Empty;
        StateHasChanged();
        page = Page.ShowAutomaton;
        automaton = G;
        StateHasChanged();
    }

    private void SummaryAutomaton(DeterministicFiniteAutomaton G)
    {
        page = Page.Empty;
        StateHasChanged();
        page = Page.AutomatonSummary;
        automaton = G;
        StateHasChanged();
    }

    private void SaveAutomaton(DeterministicFiniteAutomaton G)
    {
        JsRuntime.SaveFile($"{G.Name}.json", DeterministicFiniteAutomaton.ToJsonString(G));
    }

    private async void LoadJsonAutomaton(string name)
    {
        var json = await JsRuntime.ReadFile(name);
        var aut = DeterministicFiniteAutomaton.FromJsonString(json);
        AddAutomaton(aut);
        StateHasChanged();
    }

    private async void LoadWmodAutomaton(string name)
    {
        var wmod = await JsRuntime.ReadFile(name);
        DeterministicFiniteAutomaton.FromWmodString(wmod, out var p, out var e);
        AddAutomaton(p);
        AddAutomaton(e);
        StateHasChanged();
    }

    private async void LoadAdsAutomaton(string name)
    {
        var ads = await JsRuntime.ReadFile(name);
        var aut = DeterministicFiniteAutomaton.FromAdsString(ads);
        AddAutomaton(new []{aut});
        StateHasChanged();
    }

    private async void LoadXmlAutomaton(string name)
    {
        var xml = await JsRuntime.ReadFile(name);
        var aut = DeterministicFiniteAutomaton.FromXMLString(xml);
        AddAutomaton(new[] { aut });
        StateHasChanged();
    }

    private void LoadSmallFactory()
    {
        states.TryAdd("q0", new State("q0", Marking.Marked));
        states.TryAdd("q1", new State("q1", Marking.Unmarked));

        events.TryAdd("a1", new Event("a1", Controllability.Controllable));
        events.TryAdd("a2", new Event("a2", Controllability.Controllable));
        events.TryAdd("b1", new Event("b1", Controllability.Uncontrollable));
        events.TryAdd("b2", new Event("b2", Controllability.Uncontrollable));

        automata.TryAdd("M1", new DeterministicFiniteAutomaton(new[] { (states["q0"], events["a1"], states["q1"]), (states["q1"], events["b1"], states["q0"]), }, states["q0"], "M1"));
        automata.TryAdd("M2", new DeterministicFiniteAutomaton(new[] { (states["q0"], events["a2"], states["q1"]), (states["q1"], events["b2"], states["q0"]), }, states["q0"], "M2"));
        automata.TryAdd("E", new DeterministicFiniteAutomaton(new[] { (states["q0"], events["b1"], states["q1"]), (states["q1"], events["a2"], states["q0"]), }, states["q0"], "E"));

    }

    private void LoadFlexibleManufacturingSystem()
    {
        var e = new[] { 11, 12, 21, 22, 41, 42, 51, 52, 53, 54, 31, 32, 33, 34, 35, 36, 37, 38, 39, 30, 61, 63, 65, 64, 66, 71, 72, 73, 74, 81, 82 }.ToDictionary(alias => alias, alias => (AbstractEvent)new Event($"{alias}", alias % 2 == 0 ? Controllability.Uncontrollable : Controllability.Controllable));

        var s = Enumerable.Range(0, 6).ToDictionary(i => i, i => new State($"{i}", i == 0 ? Marking.Marked : Marking.Unmarked));

        // C1
        var c1 = new DeterministicFiniteAutomaton(new Transition[] { (s[0], e[11], s[1]), (s[1], e[12], s[0]) }, s[0], "C1");

        // C2
        var c2 = new DeterministicFiniteAutomaton(new Transition[] { (s[0], e[21], s[1]), (s[1], e[22], s[0]) }, s[0], "C2");

        // Lathe
        var lathe = new DeterministicFiniteAutomaton(new Transition[] { (s[0], e[41], s[1]), (s[1], e[42], s[0]) }, s[0], "Lathe");

        // Paint Device
        var pd = new DeterministicFiniteAutomaton(new Transition[] { (s[0], e[81], s[1]), (s[1], e[82], s[0]) }, s[0], "PD");

        // Mill
        var mill = new DeterministicFiniteAutomaton(new Transition[] { (s[0], e[51], s[1]), (s[1], e[52], s[0]), (s[0], e[53], s[2]), (s[2], e[54], s[0]) }, s[0], "Mill");

        // C3
        var c3 = new DeterministicFiniteAutomaton(new Transition[] { (s[0], e[71], s[1]), (s[1], e[72], s[0]), (s[0], e[73], s[2]), (s[2], e[74], s[0]) }, s[0], "C3");

        // Robot
        var robot = new DeterministicFiniteAutomaton(new Transition[] { (s[0], e[31], s[1]), (s[1], e[32], s[0]), (s[0], e[33], s[2]), (s[2], e[34], s[0]), (s[0], e[35], s[3]), (s[3], e[36], s[0]), (s[0], e[37], s[4]), (s[4], e[38], s[0]), (s[0], e[39], s[5]), (s[5], e[30], s[0]) }, s[0], "Robot");

        // Assembly Machine
        var am = new DeterministicFiniteAutomaton(new Transition[] { (s[0], e[61], s[1]), (s[1], e[63], s[2]), (s[1], e[65], s[3]), (s[2], e[64], s[0]), (s[3], e[66], s[0]) }, s[0], "AM");

        // E1
        var e1 = new DeterministicFiniteAutomaton(new Transition[] { (s[0], e[12], s[1]), (s[1], e[31], s[0]) }, s[0], "E1");

        // E2
        var e2 = new DeterministicFiniteAutomaton(new Transition[] { (s[0], e[22], s[1]), (s[1], e[33], s[0]) }, s[0], "E2");

        // E5
        var e5 = new DeterministicFiniteAutomaton(new Transition[] { (s[0], e[36], s[1]), (s[1], e[61], s[0]) }, s[0], "E5");

        // E6
        var e6 = new DeterministicFiniteAutomaton(new Transition[] { (s[0], e[38], s[1]), (s[1], e[63], s[0]) }, s[0], "E6");

        // E3
        var e3 = new DeterministicFiniteAutomaton(new Transition[] { (s[0], e[32], s[1]), (s[1], e[41], s[0]), (s[0], e[42], s[2]), (s[2], e[35], s[0]) }, s[0], "E3");

        // E7
        var e7 = new DeterministicFiniteAutomaton(new Transition[] { (s[0], e[30], s[1]), (s[1], e[71], s[0]), (s[0], e[74], s[2]), (s[2], e[65], s[0]) }, s[0], "E7");

        // E8
        var e8 = new DeterministicFiniteAutomaton(new Transition[] { (s[0], e[72], s[1]), (s[1], e[81], s[0]), (s[0], e[82], s[2]), (s[2], e[73], s[0]) }, s[0], "E8");

        // E4
        var e4 = new DeterministicFiniteAutomaton(new Transition[] { (s[0], e[34], s[1]), (s[1], e[51], s[0]), (s[1], e[53], s[0]), (s[0], e[52], s[2]), (s[2], e[37], s[0]), (s[0], e[54], s[3]), (s[3], e[39], s[0]) }, s[0], "E4");

        var aut = new[] { c1, c2, lathe, mill, robot, am, c3, pd, e1, e2, e3, e4, e5, e6, e7, e8 };

        foreach (var g in aut) if (!automata.TryAdd(g.Name, g)) automata[g.Name] = g;
        foreach (var ev in e.Values.Where(ev => !events.TryAdd(ev.ToString(), ev))) events[ev.ToString()] = ev;

    }



#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IJSRuntime JsRuntime { get; set; }
    }
}
#pragma warning restore 1591
